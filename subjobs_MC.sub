#!/bin/bash
#SBATCH -o ./out_%j.out
#SBATCH -e ./err_%j.out
#SBATCH -J cycle_jobs
#SBATCH --partition=shared,sapphire
#SBATCH --nodes=2
#SBATCH --ntasks-per-node=8
#SBATCH --cpus-per-task=8
##SBATCH --ntasks=1
##SBATCH --cpus-per-task=10
#SBATCH --mail-type=end
#SBATCH --mail-user=giovanni.canossa@physik.uni-muenchen.de
#SBATCH --time=50:00:00
#-output=/dev/null
#-error=/dev/null

module load gcc/12.2.0-fasrc01
#module load slurm_setup
module load python/3.10.9
module load openmpi/4.1.5-fasrc01
#source $HOME/.local/bin/activate

# Define constants
L=17
disorder=0.115
timelimit=100000
therm=3000000
totsweeps=3000000
Nreplica=$SLURM_NTASKS_PER_NODE
Nbins=500
T_Top=1.180
T_Top_PT=2.5

PT="true"
N_disorder_reps=1000

# Path format for replica storage
pathformat='L_%d/p_%1.3f/%s/Seed_%d'


# Initialize random seeds
Seeds=($(shuf -i 1-1000000 -n $N_disorder_reps))
echo "Seeds: ${Seeds[@]}"

# Loop over seeds
for i in "${!Seeds[@]}"; do
    Seed=${Seeds[$i]}

    for init in "even" "odd"; do

        # Create directory structure
        replica_path=$(printf "$pathformat" "$L" "$disorder" "$init" "$i")
        mkdir -p "$replica_path"

        # Generate configuration and disorder value
        python genconfigs_MC.py --L "$L" --disorder "$disorder" --timelimit "$timelimit" --therm "$therm" --totsweeps "$totsweeps" --Nreplica "$Nreplica" --Nbins "$Nbins" --Seed "$Seed" --init "$init" --replica_path "$replica_path"  --T_top "$T_top" --T_top_PT "$T_top_PT"

        # Navigate to the simulation directory
        cd "$replica_path"

        # Run the simulation and save output files in the respective folder
#        echo "1" > "PTval.txt"
#        mpirun -n $Nreplica ../../../../build/2DRBI_MC "2DRBI.ini"
	echo "0" > "PTval.txt"
	mpirun -n $Nreplica ../../../../build/2DRBI_MC "2DRBI.ini"
	rm "PTval.txt"
        	find "." -type f -name "*Ti_time*" -exec rm -f {} \;
        	find "." -type f -name "*.data*" -exec rm -f {} \;
        	find "." -type f -name "*config*" -exec rm -f {} \;
       # Navigate back to root directory
        cd "$OLDPWD"

    # Generate PT_simulation
#    replica_path=$(printf "$pathformat" "$L" "$disorder" "PT" "$i")
#    mkdir -p "$replica_path"

    done

    if [ "$PT" = "true" ];then
	replica_path=$(printf "$pathformat" "$L" "$disorder" "even" "$i")
	f1="$replica_path/2DRBI.ini"
	f2="$replica_path/config_p.data"
        f3="$replica_path/T_points.data"
	PT_path=$(printf "$pathformat" "$L" "$disorder" "PT" "$i")

	mkdir -p "$PT_path"
	# Copy the file from replica_path to PT_path
	cp "$f1" "$PT_path"
	cp "$f2" "$PT_path"
	cp "$f3" "$PT_path"
	cd "$PT_path"
	echo "$PT_path"
	mpirun -n $Nreplica ../../../../build/2DRBI_PT "2DRBI.ini"
       cd "$OLDPWD"
    fi

done


# FINAL SIMULATION at 0 disorder
mul=10
therm=$((therm*mul))
totsweeps=$((totsweeps*mul))
for init in "0dis"; do
	replica_path=$(printf "$pathformat" "$L" "$disorder" "$init" "0")
	mkdir -p "$replica_path"
	seed=$(shuf -i 1-1000000 -n 1)
	# Generate configuration and disorder value
	python genconfigs_MC.py --L "$L" --disorder "$disorder" --timelimit "$timelimit" --therm "$therm" --totsweeps "$totsweeps" --Nreplica "$Nreplica" --Nbins "$Nbins" --Seed "$seed" --init "$init" --replica_path "$replica_path"  --T_top "$T_top" --T_top_PT "$T_top_PT"

	cd "$replica_path"
	echo "running final sim"
#        echo "1" > "PTval.txt"
#        mpirun -n $Nreplica ../../../../build/2DRBI "2DRBI.ini"
	echo "0" > "PTval.txt"
	mpirun -n $Nreplica ../../../../build/2DRBI_MC "2DRBI.ini"
    rm "PTval.txt"
#        find "." -type f -name "*Ti_time*" -exec rm -f {} \;
#        find "." -type f -name "*.data*" -exec rm -f {} \;
#        find "." -type f -name "*config*" -exec rm -f {} \;

	cd "$OLDPWD"
done



wait
